<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>streamlit on Pasza's blog</title><link>/tags/streamlit/</link><description>Recent content in streamlit on Pasza's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Piotr Pasza StoroÅ¼enko</copyright><lastBuildDate>Mon, 28 Feb 2022 20:23:42 +0100</lastBuildDate><atom:link href="/tags/streamlit/index.xml" rel="self" type="application/rss+xml"/><item><title>Streamlit Tutorial: How to Deploy Streamlit Apps on RStudio Connect ðŸ’°</title><link>/posts/solar-panels-4/</link><pubDate>Mon, 28 Feb 2022 20:23:42 +0100</pubDate><guid>/posts/solar-panels-4/</guid><description>
I wrote another post for Appsilon, this time about deploying streamlit applications on RStudio Connect infrastructure.
This post might be totally useless for majority of audience, but a pure gold for a few ðŸ’°. What is streamlit you can understand from my previous post.
Having a running app in your browser is already cool, but how cool is it to deploy your app on the internet? If you need an enterprise solution for hosting dashboards in RShiny/streamlit, RSConnect is the way!</description></item><item><title>Detecting Solar Panels from satellite images part 3 - PoC model deployment in streamlit ðŸŽˆ</title><link>/posts/solar-panels-3/</link><pubDate>Fri, 14 Jan 2022 20:23:36 +0100</pubDate><guid>/posts/solar-panels-3/</guid><description>
This one is short. :)
Usually when we are doing ML experiments, training models, preparing EDA, we want to share the results with the World at some point. One of the quickest and easiest ways to do so in python, to create a simple webapp with results, is a super-cool library streamlit! If you thought building an app in flask is easy, you will be amazed by streamlit simplicity. Actually you do not have to create an ML related app, nobody checks that ;).</description></item></channel></rss>