<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Summing on Pasza&#39;s blog</title>
    <link>/tags/summing/</link>
    <description>Recent content in Summing on Pasza&#39;s blog</description>
    <generator>Hugo -- 0.145.0</generator>
    <language>en</language>
    <copyright>Piotr Pasza Storożenko</copyright>
    <lastBuildDate>Sat, 16 Oct 2021 08:42:59 +0200</lastBuildDate>
    <atom:link href="/tags/summing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to Sum Like a Boss (Almost) Σ</title>
      <link>/posts/how-to-sum-like-a-boss/</link>
      <pubDate>Sat, 16 Oct 2021 08:42:59 +0200</pubDate>
      <guid>/posts/how-to-sum-like-a-boss/</guid>
      <description>&lt;p&gt;In a recent post, I presented how memory layout may influence a matrix summing speed.
It&amp;rsquo;s interesting to see that there are plenty of pitfalls we might fall into when writing sum function and memory layout is not the only one.
Please first &lt;a href=&#34;/posts/speed-of-traversing-matrix/&#34; title=&#34;Post on summing by rows vs cols first&#34;&gt;read the previous post on summing&lt;/a&gt; if you haven&amp;rsquo;t already.&lt;/p&gt;
&lt;p&gt;Without thinking &lt;em&gt;why&lt;/em&gt;, let&amp;rsquo;s take a look at those two functions:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
