<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>appsilon on Pasza's blog</title><link>/tags/appsilon/</link><description>Recent content in appsilon on Pasza's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Piotr Pasza Storo≈ºenko</copyright><lastBuildDate>Fri, 08 Apr 2022 09:50:09 +0200</lastBuildDate><atom:link href="/tags/appsilon/index.xml" rel="self" type="application/rss+xml"/><item><title>Presentation at ML4Plankton Conference üåäüêü</title><link>/posts/ml4plankton-conference/</link><pubDate>Fri, 08 Apr 2022 09:50:09 +0200</pubDate><guid>/posts/ml4plankton-conference/</guid><description>
Recently I was working at work on detecting the oil sac in copepods. This is was a super cool problem in which we received data from professor Fr√©d√©ric Maps from Universit√© Laval. We together gave a talk on conference ML4Plankton that you can watch online! First Frederic gives some context on why this problem is important and later I explain methods used and problems you can find. Our talk is available online here:</description></item><item><title>Streamlit Tutorial: How to Deploy Streamlit Apps on RStudio Connect üí∞</title><link>/posts/solar-panels-4/</link><pubDate>Mon, 28 Feb 2022 20:23:42 +0100</pubDate><guid>/posts/solar-panels-4/</guid><description>
I wrote another post for Appsilon, this time about deploying streamlit applications on RStudio Connect infrastructure.
This post might be totally useless for majority of audience, but a pure gold for a few üí∞. What is streamlit you can understand from my previous post.
Having a running app in your browser is already cool, but how cool is it to deploy your app on the internet? If you need an enterprise solution for hosting dashboards in RShiny/streamlit, RSConnect is the way!</description></item><item><title>Detecting Solar Panels from satellite images part 3 - PoC model deployment in streamlit üéà</title><link>/posts/solar-panels-3/</link><pubDate>Fri, 14 Jan 2022 20:23:36 +0100</pubDate><guid>/posts/solar-panels-3/</guid><description>
This one is short. :)
Usually when we are doing ML experiments, training models, preparing EDA, we want to share the results with the World at some point. One of the quickest and easiest ways to do so in python, to create a simple webapp with results, is a super-cool library streamlit! If you thought building an app in flask is easy, you will be amazed by streamlit simplicity. Actually you do not have to create an ML related app, nobody checks that ;).</description></item><item><title>Detecting Solar Panels from satellite images part 2 -- machine learning in fastai ü§ñ</title><link>/posts/solar-panels-2/</link><pubDate>Mon, 29 Nov 2021 16:18:26 +0100</pubDate><guid>/posts/solar-panels-2/</guid><description>
&lt;p>&lt;a href="/posts/solar-panels-1">As mentioned a month ago&lt;/a>, I write a series of posts on detecting solar panels from satellite images at my company, &lt;a href="https://appsilon.com">Appsilon&lt;/a>.
In this post I focus on using &lt;code>fastai&lt;/code> python library to deliver a working ML model in few hours!&lt;/p></description></item><item><title>Detecting Solar Panels from satellite images part 1 -- data preparationüõ∞Ô∏è</title><link>/posts/solar-panels-1/</link><pubDate>Tue, 02 Nov 2021 11:18:26 +0100</pubDate><guid>/posts/solar-panels-1/</guid><description>
&lt;p>I&amp;rsquo;m writing a series of posts on detecting solar panels from satellite images at my company, &lt;a href="https://appsilon.com">Appsilon&lt;/a>.
To be honest, not from satellite images but from &lt;a href="https://en.wikipedia.org/wiki/Orthophoto">orthophotos&lt;/a>.
If you don&amp;rsquo;t know what are orthophotos, the good news is that &lt;a href="https://appsilon.com/using-ai-to-detect-solar-panels-part-1/">the first post has been released recently!&lt;/a>.&lt;/p></description></item><item><title>ML Data Versioning With DVC: How to manage machine learning data üóÉ</title><link>/posts/ml-data-versioning-with-dvc/</link><pubDate>Wed, 13 Oct 2021 07:23:26 +0200</pubDate><guid>/posts/ml-data-versioning-with-dvc/</guid><description>
Recently I wrote a post about DVC at my company&amp;rsquo;s, Appsilon blog. DVC is like a git, but for data, models and experiments. It also allows for creating an automated experiments pipelines.
As a teaser I&amp;rsquo;ll just say that, having prepared scripts for model training and evaluating, when new data is added to the repo, the whole training is run automatically. Metrics are saved to appropriate files alongside with parameters, same with plots.</description></item></channel></rss>