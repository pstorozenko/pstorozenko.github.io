<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>python on Pasza's blog</title><link>/tags/python/</link><description>Recent content in python on Pasza's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Piotr Pasza Storo≈ºenko</copyright><lastBuildDate>Mon, 14 Mar 2022 22:30:09 +0100</lastBuildDate><atom:link href="/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>StyleGANv2 in Your Hands üíáüëª</title><link>/posts/stylegan-in-your-hands/</link><pubDate>Mon, 14 Mar 2022 22:30:09 +0100</pubDate><guid>/posts/stylegan-in-your-hands/</guid><description>
This is the second post from micro-series preceding the SFI conference. In the first post I showed how easy it is to do the style transfer at home. Now, I would like to present you how to play with StyleGANv2. StyleGANv2 is the second version of StyleGAN, they are very similar in core principals. We will be working with StyleGANv2 but I will refer to it as SG. There is a lot that can be said/explained about SG.</description></item><item><title>Streamlit Tutorial: How to Deploy Streamlit Apps on RStudio Connect üí∞</title><link>/posts/solar-panels-4/</link><pubDate>Mon, 28 Feb 2022 20:23:42 +0100</pubDate><guid>/posts/solar-panels-4/</guid><description>
I wrote another post for Appsilon, this time about deploying streamlit applications on RStudio Connect infrastructure.
This post might be totally useless for majority of audience, but a pure gold for a few üí∞. What is streamlit you can understand from my previous post.
Having a running app in your browser is already cool, but how cool is it to deploy your app on the internet? If you need an enterprise solution for hosting dashboards in RShiny/streamlit, RSConnect is the way!</description></item><item><title>Playing With Style Transfer üé®</title><link>/posts/playing-with-style-transfer/</link><pubDate>Sat, 05 Feb 2022 21:12:18 +0100</pubDate><guid>/posts/playing-with-style-transfer/</guid><description>
As mentioned earlier, I will be giving a talk on the 17th SFI IT Academic Festival on the topic of style transfer and StyleGAN. In this post I would like to show you how easy it is to play with style transfer on your own!
To tutorial or not to tutorial It might be obvious for you to check Tensorflow/PyTorch tutorials if you wanted to learn how to create style-transfer system.</description></item><item><title>Detecting Solar Panels from satellite images part 3 - PoC model deployment in streamlit üéà</title><link>/posts/solar-panels-3/</link><pubDate>Fri, 14 Jan 2022 20:23:36 +0100</pubDate><guid>/posts/solar-panels-3/</guid><description>
This one is short. :)
Usually when we are doing ML experiments, training models, preparing EDA, we want to share the results with the World at some point. One of the quickest and easiest ways to do so in python, to create a simple webapp with results, is a super-cool library streamlit! If you thought building an app in flask is easy, you will be amazed by streamlit simplicity. Actually you do not have to create an ML related app, nobody checks that ;).</description></item><item><title>Detecting Solar Panels from satellite images part 2 -- machine learning in fastai ü§ñ</title><link>/posts/solar-panels-2/</link><pubDate>Mon, 29 Nov 2021 16:18:26 +0100</pubDate><guid>/posts/solar-panels-2/</guid><description>
&lt;p>&lt;a href="/posts/solar-panels-1">As mentioned a month ago&lt;/a>, I write a series of posts on detecting solar panels from satellite images at my company, &lt;a href="https://appsilon.com">Appsilon&lt;/a>.
In this post I focus on using &lt;code>fastai&lt;/code> python library to deliver a working ML model in few hours!&lt;/p></description></item><item><title>Detecting Solar Panels from satellite images part 1 -- data preparationüõ∞Ô∏è</title><link>/posts/solar-panels-1/</link><pubDate>Tue, 02 Nov 2021 11:18:26 +0100</pubDate><guid>/posts/solar-panels-1/</guid><description>
&lt;p>I&amp;rsquo;m writing a series of posts on detecting solar panels from satellite images at my company, &lt;a href="https://appsilon.com">Appsilon&lt;/a>.
To be honest, not from satellite images but from &lt;a href="https://en.wikipedia.org/wiki/Orthophoto">orthophotos&lt;/a>.
If you don&amp;rsquo;t know what are orthophotos, the good news is that &lt;a href="https://appsilon.com/using-ai-to-detect-solar-panels-part-1/">the first post has been released recently!&lt;/a>.&lt;/p></description></item></channel></rss>